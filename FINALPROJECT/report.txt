Final Project - Spring 2021 (ICS 211)

Short Guide:
Within my FinalProject.java file runs my program. The "travel agent" must create a Passenger in order to create, edit, and display information. In order for the travel agent to book or cancel a reservation is to used the created Passenger. First, the travel agent must create a Passenger entering their first & last name along with their email. The travel agent can enter up to however many Passengers he/she would like to create. If there are any mistakes with inputting information, the travel agent may edit their information by selecting the index at which that Passenger is stored. Second, to book a flight the travel agent must select which Passenger the person would like to take. Each flight can take up to 5 Passengers. If there are more than 5 they will be placed on a wait list. To cancel a reservation the travel agent will have to select the Passenger and Flight. If that person is on the wait list, he/she will be moved to the main Flight list. Finally, once the travel agent is finished, just press 0 to exit.

Met Criteria:
For my final project I have met the final criteria by answering the prompt correctly. I created two classes called the Flight and Passenger class. The Passenger class stores a persons information such as their first and last name along with their identification number and email. For the Flight class, it also stores Flight details such as the Flight identification number, origin, and destination. 

Within my program I was able to implement a flight reservation system using Data Structures. The two structures I used was an ArrayList & Queue. I chose an ArrayList to store Passenger information because adding them is quick as well as accessing a certain Passenger's index to modify their information. Queue was also another one I had chosen because it helped store the Passengers in a List like manner. The queue works in a First-In, First-Out (FIFO) which helped with the Passengers in the wait list moving to the main list once a Passenger had cancelled their reservation.

Challenges:
For the final project it was quite tough as their was many ways I could have approached implementing the flight reservation system. There was a lot of Data Structures that we had covered but when it came down to it, I had to decide what would have been the best way to store two Object classes and merge them together.

The most challenging part was trying to merge them together and I simply was overthinking the steps I had approached. For example, I was accessing the Flight object class in order to print the Passenger list instead from my .java file that contained the master list. I also had another difficulty since I had coder's block in which storing a certain Passengers Flight information. Thanks to you Laura it helped clear a lot of things when it was right in front of me, but what also helped me over come these challenges was stepping away from the program and then getting back into it helped a lot.